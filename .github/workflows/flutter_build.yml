name: Build All Platforms and Release

on:
  workflow_dispatch:

env:
  PARENT_REPO: aimatochysia/qsafevault

jobs:
  build-ubuntu:
    name: Build Android, Web, Linux
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}

    steps:
      - name: Checkout source from Parent repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PARENT_REPO }}
          token: ${{ secrets.ORIGIN_PAT }}
          ref: main

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.32.0

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: flutter-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            flutter-${{ runner.os }}-

      - name: Install dependencies
        run: flutter pub get

      - name: Generate release tag
        id: set-tag
        run: echo "tag=v$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          
      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Web
        run: flutter build web --release

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev libglib2.0-dev libgtk-3-dev liblzma-dev

      - name: Build Linux
        run: flutter build linux --release

      - name: Prepare Ubuntu artifacts
        run: |
          mkdir -p dist/android dist/web dist/linux
          cp build/app/outputs/flutter-apk/app-release.apk dist/android/
          cp -r build/web/* dist/web/
          cp -r build/linux/x64/release/bundle/* dist/linux/

      - name: Upload Ubuntu artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-artifacts
          path: dist/
          if-no-files-found: error

  build-windows:
    name: Build Windows EXE
    runs-on: windows-latest
    needs: build-ubuntu

    steps:
      - name: Checkout source from Parent repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PARENT_REPO }}
          token: ${{ secrets.ORIGIN_PAT }}
          ref: main

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.32.0

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Prepare Windows artifacts
        run: |
          # Create the destination folder
          New-Item -ItemType Directory -Force -Path dist\windows
      
          # Copy all Release files
          Copy-Item -Path build\windows\x64\runner\Release\* -Destination dist\windows -Recurse -Force
        shell: pwsh


      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: dist/windows
          if-no-files-found: error

  release:
    name: Create GitHub Release in Parent
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-windows]

    steps:
      - name: Download Ubuntu artifacts
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-artifacts
          path: release-dist

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: release-dist/windows

      - name: Set release metadata
        id: release-info
        run: |
          TAG="${{ needs.build-ubuntu.outputs.tag }}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "RELEASE_NAME=Automated Build $TAG" >> $GITHUB_ENV

          {
            echo "RELEASE_BODY<<EOF"
            echo "Built automatically by GitHub Actions runner."
            echo ""
            echo "Included platforms:"
            echo "- ✅ Android (.apk)"
            echo "- ✅ Web (HTML/JS/CSS)"
            echo "- ✅ Linux (binary executable)"
            echo "- ✅ Windows (.exe)"
            echo "EOF"
          } >> $GITHUB_ENV

      - name: Create GitHub Release in Parent repo
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_BODY }}
          token: ${{ secrets.ORIGIN_PAT }}
          files: |
            release-dist/android/app-release.apk
            release-dist/web/**
            release-dist/linux/**
            release-dist/windows/**
